plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id "com.google.protobuf" version "0.9.4"
    id("io.freefair.lombok") version "8.12.1"
    id 'pmd'
}

group = 'dev.aisandbox'

def protobufVersion = '4.28.2'

application {
    mainClass = 'dev.aisandbox.launcher.SandboxServerLauncher'
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
}

javafx {
    version = '21.0.5'
    modules = ['javafx.controls', 'javafx.fxml']
    if (System.properties.containsKey('env')) {
        platform = System.properties['env']
    }
}

javadoc {
    destinationDir = file("build/docs/javadoc")
}

tasks.register('copyDocs', Copy) {
    group = "documentation"
    description = "Copies documentation into the build tree."
    from 'documentation'
    into 'build/docs'
}

tasks.withType(JavaCompile).configureEach {
    options.deprecation = true
    options.compilerArgs << '-Xlint:unchecked'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

protobuf {
    // Configure the protoc executable
    protoc { artifact = "com.google.protobuf:protoc:${protobufVersion}" }
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().configureEach { task ->
            // Here you can configure the task
        }
    }

}

repositories {
    mavenCentral()
}

dependencies {
    // protobuf
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    // xchart
    implementation 'org.knowm.xchart:xchart:3.8.8'
    // commons utilities
    implementation 'commons-cli:commons-cli:1.9.0'
    implementation 'org.apache.commons:commons-statistics-descriptive:1.1'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation ('commons-beanutils:commons-beanutils:1.9.4') {
        exclude group: 'commons-logging', module:'commons-logging'
    }
    // jcodec
    implementation 'org.jcodec:jcodec-javase:0.2.5'
    implementation 'org.jcodec:jcodec:0.2.5'
    // logging
    implementation 'ch.qos.logback:logback-core:1.5.6'
    testImplementation 'org.slf4j:slf4j-api:2.1.0-alpha1'
    implementation 'ch.qos.logback:logback-classic:1.5.6'
    // JCodec for writing MP4 files
    implementation 'org.jcodec:jcodec:0.2.3'
    implementation 'org.jcodec:jcodec-javase:0.2.3'
    // test libs
    testImplementation(platform('org.junit:junit-bom:5.11.4'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testRuntimeOnly('org.junit.platform:junit-platform-launcher')
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

pmd {
    consoleOutput = true
    toolVersion = "7.0.0"
    ignoreFailures = true
}