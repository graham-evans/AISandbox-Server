plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.google.protobuf" version "0.9.4"
    id 'me.qoomon.git-versioning' version '6.4.4'
    id 'pmd'
}

group = 'dev.aisandbox'

def protobufVersion = '4.28.2'
def protocVersion = protobufVersion

gitVersioning.apply {
    refs {
        considerTagsOnBranches = true
        tag('v(?<version>.*)') {
            version = '${ref.version}'
        }
    }
    rev {
        version = "SNAPSHOT"
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

javadoc {
    destinationDir = file("build/docs/javadoc")
}

tasks.register('copyDocs', Copy) {
    group = "documentation"
    description = "Copies documentation into the build tree."
    from 'documentation'
    into 'build/docs'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

protobuf {
    // Configure the protoc executable
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    generateProtoTasks {
        // all() returns the collection of all protoc tasks
        all().configureEach { task ->
            // Here you can configure the task
        }
    }

}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    // protobuf
    implementation "com.google.protobuf:protobuf-java:${protobufVersion}"
    // jfreechart
    implementation 'org.jfree:jfreechart:1.5.5'
    // commons utilities
    implementation 'commons-cli:commons-cli:1.9.0'
    implementation 'org.apache.commons:commons-statistics-descriptive:1.1'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    // JCodec for writing MP4 files
    implementation 'org.jcodec:jcodec:0.2.3'
    implementation 'org.jcodec:jcodec-javase:0.2.3'
    // lombok for removing boiler plate code
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    // test libs
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

pmd {
    consoleOutput = true
    toolVersion = "7.0.0"
    ignoreFailures = true
}